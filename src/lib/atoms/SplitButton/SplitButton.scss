.splitButtonTestHolder {
    display: inline-grid;
    grid-template-rows: repeat(2, auto);
    grid-auto-flow: column;
    gap: 1rem;
}

// todo should remove splitButtonTestHolder later

.splitButton {
    display: inline-flex;

    &__button {
        $this: &;

        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;

        &:first-child:not(:only-child) {
            border-inline-end-width: 0;

            &::after {
                content: '';
                display: block;
                position: absolute;
                top: -0.1rem;
                bottom: -0.1rem;
                inset-inline-end: 0;
                width: 0.1rem;

                //height: 100%;
                z-index: 10;
                pointer-events: none;
            }
        }

        &:last-child:not(:only-child) {
            border-inline-start-width: 0;
        }

        &_size {
            &_large {
                gap: var(--guit-ref-spacing-xsmall);
                height: var(--guit-sem-dimension-height-large);

                &:only-child {
                    border-radius: var(--guit-ref-radius-2xsmall);
                }

                &:first-child:not(:only-child) {
                    border-start-start-radius: var(--guit-ref-radius-2xsmall);
                    border-end-start-radius: var(--guit-ref-radius-2xsmall);
                }

                &:last-child:not(:only-child) {
                    border-start-end-radius: var(--guit-ref-radius-2xsmall);
                    border-end-end-radius: var(--guit-ref-radius-2xsmall);
                }

                &:not(#{ $this }_icon_only) {
                    padding-top: var(--guit-ref-spacing-small);
                    padding-bottom: var(--guit-ref-spacing-small);
                }

                &:not(#{ $this }_icon_before, &#{ $this }_icon_after, #{ $this }_icon_only) {
                    padding-inline-start: var(--guit-ref-spacing-large);
                    padding-inline-end: var(--guit-ref-spacing-large);
                }

                &#{ $this }_icon_before {
                    padding-inline-start: var(--guit-ref-spacing-medium);
                    padding-inline-end: var(--guit-ref-spacing-large);
                }

                &#{ $this }_icon_after {
                    padding-inline-start: var(--guit-ref-spacing-large);
                    padding-inline-end: var(--guit-ref-spacing-medium);
                }

                &#{ $this }_icon_only {
                    padding: var(--guit-ref-spacing-small);
                }
            }

            &_medium {
                gap: var(--guit-ref-spacing-xsmall);
                height: var(--guit-sem-dimension-height-medium);

                &:only-child {
                    border-radius: var(--guit-ref-radius-3xsmall);
                }

                &:first-child:not(:only-child) {
                    border-start-start-radius: var(--guit-ref-radius-3xsmall);
                    border-end-start-radius: var(--guit-ref-radius-3xsmall);
                }

                &:last-child:not(:only-child) {
                    border-start-end-radius: var(--guit-ref-radius-3xsmall);
                    border-end-end-radius: var(--guit-ref-radius-3xsmall);
                }

                &:not(#{ $this }_icon_only) {
                    padding-top: var(--guit-ref-spacing-2xsmall);
                    padding-bottom: var(--guit-ref-spacing-2xsmall);
                }

                &:not(#{ $this }_icon_before, &#{ $this }_icon_after, #{ $this }_icon_only) {
                    padding-inline-start: var(--guit-ref-spacing-medium);
                    padding-inline-end: var(--guit-ref-spacing-medium);
                }

                &#{ $this }_icon_before {
                    padding-inline-start: var(--guit-ref-spacing-xsmall);
                    padding-inline-end: var(--guit-ref-spacing-medium);
                }

                &#{ $this }_icon_after {
                    padding-inline-start: var(--guit-ref-spacing-medium);
                    padding-inline-end: var(--guit-ref-spacing-xsmall);
                }

                &#{ $this }_icon_only {
                    padding: var(--guit-ref-spacing-2xsmall);
                }
            }

            &_small {
                gap: var(--guit-ref-spacing-2xsmall);
                height: var(--guit-sem-dimension-height-small);

                &:only-child {
                    border-radius: var(--guit-ref-radius-3xsmall);
                }

                &:first-child:not(:only-child) {
                    border-start-start-radius: var(--guit-ref-radius-3xsmall);
                    border-end-start-radius: var(--guit-ref-radius-3xsmall);
                }

                &:last-child:not(:only-child) {
                    border-start-end-radius: var(--guit-ref-radius-3xsmall);
                    border-end-end-radius: var(--guit-ref-radius-3xsmall);
                }

                &:not(#{ $this }_icon_only) {
                    padding-top: var(--guit-ref-spacing-4xsmall);
                    padding-bottom: var(--guit-ref-spacing-4xsmall);
                }

                &:not(#{ $this }_icon_before, &#{ $this }_icon_after, #{ $this }_icon_only) {
                    padding-inline-start: var(--guit-ref-spacing-medium);
                    padding-inline-end: var(--guit-ref-spacing-medium);
                }

                &#{ $this }_icon_before {
                    padding-inline-start: var(--guit-ref-spacing-xsmall);
                    padding-inline-end: var(--guit-ref-spacing-medium);
                }

                &#{ $this }_icon_after {
                    padding-inline-start: var(--guit-ref-spacing-medium);
                    padding-inline-end: var(--guit-ref-spacing-xsmall);
                }

                &#{ $this }_icon_only {
                    padding: var(--guit-ref-spacing-4xsmall);
                }
            }
        }

        &_color {
            &_primary,
            &_secondary,
            &_inverse {
                border-width: var(--guit-ref-border-width-thin);
                border-style: var(--guit-ref-border-style-solid);
                &#{ $this }_type {
                    //&_outline {
                    //    border-width: var(--guit-ref-border-width-thin);
                    //    border-style: var(--guit-ref-border-style-solid);
                    //}
                }
            }

            &_primary {
                &#{ $this }_type {
                    &_fill {
                        &#{ $this }:after {
                            background-color: var(--guit-sem-color-border-inverse);
                        }

                        border-color: var(--guit-sem-color-background-brand-2);
                        background-color: var(--guit-sem-color-background-brand-2);
                        color: var(--guit-sem-color-foreground-inverse);

                        &:hover {
                            background-color: var(--guit-sem-color-background-brand-2-hover);
                            border-color: var(--guit-sem-color-background-brand-2-hover);
                        }

                        &:active {
                            background-color: var(--guit-sem-color-background-brand-2-pressed);
                            border-color: var(--guit-sem-color-background-brand-2-pressed);
                        }

                        &:disabled {
                            background-color: var(--guit-sem-color-background-disabled);
                        }
                    }

                    &_outline {
                        &#{ $this }:after {
                            background-color: var(--guit-sem-color-border-brand);
                        }

                        border-color: var(--guit-sem-color-border-brand);
                        color: var(--guit-sem-color-foreground-brand);

                        &:hover {
                            background-color: var(--guit-sem-color-background-brand-1-hover);
                        }

                        &:active {
                            background-color: var(--guit-sem-color-background-brand-1-pressed);
                        }

                        &:disabled {
                            border-color: var(--guit-sem-color-border-disabled-1);
                        }
                    }
                }
            }

            &_secondary {
                &#{ $this }_type {
                    &_fill {
                        &#{ $this }:after {
                            background-color: var(--guit-sem-color-border-neutral-2);
                        }

                        border-color: var(--guit-sem-color-border-neutral-2);
                        background-color: var(--guit-sem-color-background-neutral-2);
                        color: var(--guit-sem-color-foreground-neutral-2);

                        &:hover {
                            background-color: var(--guit-sem-color-background-neutral-2-hover);
                        }

                        &:active {
                            background-color: var(--guit-sem-color-background-neutral-2-pressed);
                        }

                        &:disabled {
                            background-color: var(--guit-sem-color-background-disabled);
                        }
                    }

                    &_outline {
                        &#{ $this }:after {
                            background-color: var(--guit-sem-color-border-neutral-2);
                        }

                        background-color: var(--guit-sem-color-background-transparent-1);
                        border-color: var(--guit-sem-color-border-neutral-2);
                        color: var(--guit-sem-color-foreground-neutral-2);

                        &:hover {
                            background-color: var(--guit-sem-color-background-transparent-1-hover);
                        }

                        &:active {
                            background-color: var(--guit-sem-color-background-transparent-1-pressed);
                        }

                        &:disabled {
                            border-color: var(--guit-sem-color-border-disabled-1);
                        }
                    }
                }
            }

            &_inverse {
                &#{ $this }_type {
                    &_fill {
                        &#{ $this }:after {
                            background-color: var(--guit-sem-color-border-neutral-2);
                        }

                        border-color: transparent;
                        background-color: var(--guit-sem-color-background-inverse);
                        color: var(--guit-sem-color-foreground-neutral-2);

                        &:hover {
                            background-color: var(--guit-sem-color-background-inverse-hover);
                        }

                        &:active {
                            background-color: var(--guit-sem-color-background-inverse-pressed);
                        }

                        &:disabled {
                            background-color: var(--guit-sem-color-background-disabled);
                        }
                    }

                    &_outline {
                        &#{ $this }:after {
                            background-color: var(--guit-sem-color-border-inverse);
                        }

                        background-color: var(--guit-sem-color-background-transparent-1);
                        border-color: var(--guit-sem-color-border-inverse);
                        color: var(--guit-sem-color-foreground-inverse);

                        &:hover {
                            background-color: var(--guit-sem-color-background-transparent-1-hover);
                        }

                        &:active {
                            background-color: var(--guit-sem-color-background-transparent-1-pressed);
                        }

                        &:disabled {
                            border-color: var(--guit-sem-color-border-inverse-disabled);
                            color: var(--guit-sem-color-foreground-inverse-disabled);
                        }
                    }
                }
            }
        }

        &:focus-visible {
            z-index: 1;
            outline-offset: var(--guit-ref-border-width-thin);
            outline: var(--guit-ref-border-width-thin) var(--guit-ref-border-style-solid)
                var(--guit-sem-color-border-focus);
        }

        &:disabled,
        &.disabled {
            pointer-events: none;

            #{ $this }__text,
            #{ $this }__icon {
                color: var(--guit-sem-color-foreground-disabled);
            }
        }
    }

    &__text {
        font-family: var(--guit-sem-font-label-medium-default-semibold-font-family);
        font-size: var(--guit-sem-font-label-medium-default-semibold-font-size);
        font-weight: var(--guit-sem-font-label-medium-default-semibold-font-weight);
        line-height: var(--guit-sem-font-label-medium-default-semibold-line-height);
    }

    &__icon {
        flex: 0 0 auto;
    }
}
