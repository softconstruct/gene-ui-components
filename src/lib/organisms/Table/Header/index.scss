@import 'src/assets/styles/variables';

.ta-header {
    top: 0;

    .ta-cell {
        flex-direction: column;
        align-items: initial;

        &.centered .table-heading {
            justify-content: center;
        }
        @include hover {
            background: sc(b, 0.02);
        }

        &.sticky {
            @include hover {
                background: sc(b, 0.06);
            }
        }

        &.is-dragged-over {
            background-color: c(hero, 0.05);
        }

        .ta-cell-header-item {
            padding: 5px 0;
        }

        .ta-cell-header-tittle {
            display: flex;
        }
    }
}

.sticky-viewport-checker {
    position: absolute;
    width: rem(1);
    top: 0;
    bottom: 0;
    visibility: hidden;
}

.table-heading {
    flex-shrink: 0;
    display: flex;
    align-items: center;
    flex: auto;
    overflow: hidden;
    width: 100%;
}

.ta-filter-icon {
    flex-shrink: 0;
    margin: 0 rem(4);
    position: relative;
    color: sc(b, 0.38);
    cursor: pointer;

    &::before,
    &::after {
        display: block;
        transition: $tableTransition color;
        font: rem(24) / 1 betcore;
    }

    &::before {
        content: '\e92c';
    }

    &::after {
        content: '\e92b';
        position: absolute;
        top: 0;
        left: 0;
    }

    &.active-asc::before,
    &.active-desc::after {
        color: c(hero);
    }
}

.table-heading-text {
    transition: $tableTransition color;

    &.active {
        color: c(hero);
    }
}

.cell-options {
    transition: 400ms opacity;

    .vertical-resizing-cursor &,
    .ta-cell:not(:hover) &:not(.popover-opened) {
        opacity: 0;
    }
}

.th-divider-holder {
    position: absolute;
    top: 0;
    bottom: 0;
    padding: rem(9);
    display: flex;
    transform: translate3d(0, 0, 0);
    @include zIndex(tableSticky);
    @include rtlp(left, right, 100%);
    @include rtl(transform, translateX(-50%), translateX(50%));

    i {
        transition: $tableTransition opacity;
    }
}

.th-divider {
    width: rem(1);
    background: sc(b, 0.15);

    .ta-cell:hover &:nth-child(2),
    .table-resize-handle:active ~ &,
    .sticky & {
        opacity: 0;
    }
}

.table-resize-handle {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    padding: rem(4) rem(9);
    cursor: col-resize;
    display: flex;

    .ta-cell:not(:hover) &:not(:active) {
        opacity: 0;
    }

    &::before {
        content: '';
        display: block;
        border-left: rem(1) dashed sc(b, 0.18);
        width: rem(1);
    }

    &:active {
        &::before {
            border-color: c(hero);
        }
    }
}
