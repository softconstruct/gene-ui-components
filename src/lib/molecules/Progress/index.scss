@import 'src/assets/styles/variables';

.progress-holder {
    display: flex;
    flex-direction: column;
    font: 600 rem(16) / rem(20) $f;
    color: sc(b, 0.64);

    &:not(.a-circular) {
        width: 100%;
    }

    &.a-default {
        &.s-medium {
            font-size: rem(14);
        }

        &.s-small {
            font-size: rem(12);
        }

        .progress-line {
            margin: rem(5) 0 0;
        }
    }

    &:not(.a-default) {
        font: 700 rem(12) / rem(16) $f;

        .progress-sub-title {
            margin: rem(5) 0 0;
            font: 600 rem(10) / rem(14) $f;
            text-transform: capitalize;
        }
    }

    &.c-success {
        @include over(hero, confirm);
    }

    &.c-fail {
        @include over(hero, danger);
    }

    .to-be-colored {
        color: c(hero);
    }

    &.a-box-bar,
    &.a-box-circular {
        border: solid rem(1) sc(b, 0.1);
        background: c(b);
        box-shadow: 0 rem(6) rem(9) 0 rgba(0, 0, 0, 5%);
    }

    &.a-box-circular {
        border-radius: rem(20);
    }
}

.progress-line {
    border-radius: rem(10);
    background: sc(b, 0.06);
    height: rem(8);
    width: 100%;
    display: flex;

    .a-box-bar > & {
        height: rem(5);
        border-radius: 0;
        background: none;
    }

    .s-medium & {
        height: rem(6);
    }

    .s-small & {
        height: rem(3);
    }

    .progress-line-fill {
        transition: 300ms width;
        max-width: 100%;
        border-radius: inherit;
        background: c(hero);
    }

    .a-linear & {
        height: rem(16);
        background: sc(b, 0.19);

        .progress-line-fill {
            background: repeating-linear-gradient(
                    -45deg,
                    sc(b, 0.34),
                    sc(b, 0.34) rem(10),
                    transparent rem(10),
                    transparent rem(20)
                )
                0 0 / rem(113) rem(100);
            animation: linear-animation 800ms linear infinite;
            @keyframes linear-animation {
                100% {
                    background-position: rem(113) 0;
                }
            }
        }
    }

    .a-linear.s-small & {
        height: rem(8);
    }
}

.progress-structure {
    display: flex;
    align-items: center;

    .a-detailed > & {
        min-height: rem(52);
    }

    .a-box-bar > &,
    .a-box-circular > & {
        min-height: rem(73);
        padding: 0 rem(20);
    }

    .a-box-circular > & {
        min-height: rem(78);
    }

    .left-info {
        flex: auto;
        overflow: hidden;
    }

    .right-info {
        flex-shrink: 0;
    }

    .blended {
        color: sc(b, 0.06);
    }

    .bc-icon-success {
        color: c(confirm);
        margin: 0 rem(8);
    }

    .left-additional-info {
        width: rem(50);
        font: 600 rem(16) / rem(20) $f;
        @include rtl(margin, 0 rem(40) 0 0, 0 0 0 rem(40));
    }
}

.progress-actions {
    display: flex;
    align-items: center;
}

.circular-progress-inner {
    --size: #{rem(120)};
    --borderSize: #{rem(8)};

    width: var(--size);
    height: var(--size);
    position: relative;
    font: 600 rem(22) / rem(26) $f;

    &:not(:hover) .layer-action,
    &:hover .layer-text {
        opacity: 0;
    }

    .icon {
        cursor: pointer;
    }

    &:not(.s-very-small) {
        .icon {
            font-size: rem(36);
        }
    }

    &.s-medium {
        font-size: rem(20);

        --size: #{rem(100)};
        --borderSize: #{rem(6)};
    }

    &.s-small {
        font-size: rem(18);

        --size: #{rem(80)};
        --borderSize: #{rem(5)};

        .icon {
            font-size: rem(30);
        }
    }

    &.s-very-small {
        --size: #{rem(50)};
        --borderSize: #{rem(4)};

        font-size: rem(12);
        font-weight: 700;
    }

    svg {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: block;

        path {
            stroke: c(hero);
            stroke-dasharray: 0, rem(300);
            stroke-dashoffset: 0;
            stroke-linecap: round;
            stroke-width: 6;
            fill-opacity: 0%;
        }
    }
}

.circular-progress-back {
    width: 100%;
    height: 100%;
    border-radius: 100%;
    border: solid var(--borderSize) sc(b, 0.06);
}

.circular-progress-layer {
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    transform: translateY(-50%);
    display: flex;
    justify-content: center;

    > div {
        transition: 300ms opacity;
    }

    .layer-action {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate3d(-50%, -50%, 0);
    }
}

.linear-progress-text {
    margin: rem(5) 0 0;
    width: 100%;
    text-align: center;
    font: 600 rem(18) / rem(22) $f;
}

.on-hover-layers {
    position: relative;
    min-width: rem(40);
    min-height: rem(40);
    display: flex;
    align-items: center;
    justify-content: center;

    > li {
        transition: 300ms opacity;

        &:nth-child(2) {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
        }
    }

    .progress-holder:hover & {
        > li {
            &:nth-child(2) {
                opacity: 1;
            }

            &:nth-last-child(2) {
                opacity: 0;
            }
        }
    }
}
