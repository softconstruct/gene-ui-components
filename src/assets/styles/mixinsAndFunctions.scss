@mixin placeholder {
    &::input-placeholder {
        @content;
    }

    &:placeholder {
        @content;
    }

    &::placeholder {
        @content;
    }

    &:input-placeholder {
        @content;
    }
}
@function set-color($color, $color-dark: #000000, $color-light: #ffffff) {
    @if $color == #2bc784 or $color == #e64e48 or $color == #e6af57 {
        @return $color-light;
    }
    @if lightness($color) > 50 {
        @return $color-dark;
    } @else {
        @return $color-light;
    }
}
@function c($color, $opacity: 1) {
    @if $color == b {
        $color: background;
    }
    @if $opacity == 1 {
        @return var(--#{$color});
    } @else {
        @return rgba(var(--#{$color}-rgb), $opacity);
    }
}
@function sc($color, $opacity: 1) {
    @if $color == b {
        $color: background;
    }
    @if $opacity == 1 {
        @return var(--#{$color}-sc);
    } @else {
        @return rgba(var(--#{$color}-sc-rgb), $opacity);
    }
}
@mixin over($n1, $n2) {
    --#{$n1}: var(--#{$n2});
    --#{$n1}-hover: var(--#{$n2}-hover);
    --#{$n1}-sc: var(--#{$n2}-sc);
    --#{$n1}-rgb: var(--#{$n2}-rgb);
    --#{$n1}-sc-rgb: var(--#{$n2}-sc-rgb);
}

@mixin hover($el: null) {
    @media (hover: hover) {
        @if $el != null {
            #{$el}:hover & {
                @content;
            }
        } @else {
            &:hover {
                @content;
            }
        }
    }
}
@mixin hover-active {
    @media (hover: hover) {
        &:hover {
            @content;
        }
    }

    &.active {
        @content;
    }
}

@mixin focus-visible($border-radius: rem(4)) {
    &:focus-visible {
        outline: rem(2) var(--hero) solid;
        border-radius: $border-radius;
    }
}

@mixin desktop($s: null) {
    @if $s != null {
        #{$s}:not(.mobile-view) & {
            @content;
        }
    } @else {
        &:not(.mobile-view) {
            @content;
        }
    }
}

@mixin mobile($s: null) {
    @if $s != null {
        #{$s}.mobile-view & {
            @content;
        }
    } @else {
        &.mobile-view {
            @content;
        }
    }
}

@function per($size, $guide: 1440) {
    $per: calc($size / $guide * 100);
    @return #{$per + '%'};
}

@function str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace +
            str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

@mixin zIndex($index) {
    @if type-of($index) == number {
        z-index: $index;
    } @else {
        @if str-index($index, 'Backdrop') {
            $index: str-replace($index, 'Backdrop');

            z-index: map-get($zIndex, $index) - 1;
        } @else {
            z-index: map-get($zIndex, $index);
        }
    }
}
@function rem($size) {
    $remSize: calc($size / 10);
    @if $size == 1 {
        @return #{$size}px;
    }
    @return #{$remSize}rem;
}
@function -rem($size) {
    $remSize: calc($size / 10);
    @if $size == 1 {
        @return -#{$size}px;
    }
    @return -#{$remSize}rem;
}
