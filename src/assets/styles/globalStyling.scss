@import 'variables';
@import 'https://fonts.googleapis.com/css?family=Open+Sans:400,600,700&display=swap';

:root {
    --font-family: 'Open Sans', 'Arial', 'Helvetica Neue', sans-serif;
    @each $name, $color in $c {
        --#{$name}: #{$color};
    }
}

.invert-colors {
    @include over(background, foreground);
}

* {
    margin: 0;
    border: 0;
    padding: 0;
    outline: 0;
    border-radius: 0;
    background: none;
    vertical-align: top;
    -webkit-font-smoothing: subpixel-antialiased;
    -webkit-tap-highlight-color: transparent;

    &,
    &::before,
    &::after {
        box-sizing: border-box;
    }
}
@media screen and (min-width: 1024px) {
    :not(main)::-webkit-scrollbar {
        width: map-get($scrollbar, 'size');
        height: map-get($scrollbar, 'size');

        &-button,
        &-corner {
            display: none;
        }

        &-thumb {
            border: map-get($scrollbar, 'space') solid transparent;
            border-radius: map-get($scrollbar, 'size');
            background: map-get($scrollbar, 'thumbBackground') content-box;

            &:hover,
            &:active {
                background-color: map-get($scrollbar, 'thumbActiveBackground');
            }
        }

        &-track {
            background: transparent;
        }
    }
}

a {
    color: inherit;
    text-decoration: none;
    transition: 300ms color, 300ms background;
}

table {
    width: 100%;
    border-collapse: collapse;
    border-spacing: 0;
}

img,
svg {
    display: block;
    max-width: 100%;
}

button,
input,
optgroup,
select,
textarea {
    appearance: none;
    appearance: none;
    font: inherit;
    appearance: none;
    display: block;
    color: inherit;
    @include placeholder {
        opacity: 1;
        font-family: inherit;
    }
}

html {
    font: 10px / 1.15 $f;
    text-size-adjust: 100%;
    background: var(--page-background, #f0f2f5);
    color: sc(b, 0.75);
    height: 100%;
    max-width: 100vw;

    &.view-small {
        font-size: 8.12px;
    }

    &.view-normal {
        font-size: 9.12px;
    }

    body,
    #root {
        width: 100%;
    }
}

body {
    font-size: rem(14);
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-weight: 600;
    line-height: normal;
}

h1 {
    font-size: rem(32);

    &.large {
        font-size: rem(38);
    }
}

h2 {
    font-size: rem(28);
}

h3 {
    font-size: rem(18);
}

h4 {
    font-size: rem(16);
}

h5 {
    font-size: rem(14);
}

h6 {
    font-size: rem(12);
}

li {
    display: block;
}

.ellipsis-text {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.capitalize-text {
    text-transform: capitalize;
}

input {
    &::-webkit-inner-spin-button,
    &::-webkit-outer-spin-button {
        appearance: none;
        margin: 0;
    }

    &::-ms-clear {
        display: none;
    }
}

.pointer-events-none {
    pointer-events: none;
}

.cursor-pointer {
    cursor: pointer;
}

[data-react-beautiful-dnd-drag-handle='0'] {
    cursor: pointer;
}

.color- {
    &danger {
        color: c(danger) !important;
    }

    &confirm {
        color: c(confirm) !important;
    }

    &hero {
        color: c(hero) !important;
    }
}

::selection {
    background: c(hero, 0.15);
    color: c(hero, 1);
}

.vertical-resizing-cursor {
    * {
        cursor: col-resize !important;

        &:not(:active) {
            pointer-events: none;
        }
    }
}

.cursor-grab {
    cursor: grab;

    &:active {
        cursor: grabbing;
    }
}
@for $i from 1 to 48 {
    @if $i % 2 == 0 {
        .m-rl-#{$i} {
            margin: 0 #{rem($i)};
        }
        .m-tb-#{$i} {
            margin: #{rem($i)} 0;
        }
        .m-t-#{$i} {
            margin-top: #{rem($i)};
        }
        .m-r-#{$i} {
            margin-inline-end: #{rem($i)};
        }
        .m-l-#{$i} {
            margin-inline-start: #{rem($i)};
        }
        .m-b-#{$i} {
            margin-bottom: #{rem($i)};
        }
    }
}
